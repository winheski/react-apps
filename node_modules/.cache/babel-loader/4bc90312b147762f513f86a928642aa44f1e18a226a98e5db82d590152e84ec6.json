{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mt130\\\\Documents\\\\React\\\\react-apps\\\\src\\\\Components\\\\Questions.js\";\nimport Option from \"./Option\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Questions({\n  questions,\n  activeQuestion,\n  dispatch\n}) {\n  let currentquestion = questions.find((question, index) => index === activeQuestion);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: currentquestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: currentquestion.options.map(option => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          optionText: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["Option","jsxDEV","_jsxDEV","Fragment","_Fragment","Questions","questions","activeQuestion","dispatch","currentquestion","find","question","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","map","option","optionText","_c","$RefreshReg$"],"sources":["C:/Users/mt130/Documents/React/react-apps/src/Components/Questions.js"],"sourcesContent":["import Option from \"./Option\";\r\n\r\nexport default function Questions({ questions, activeQuestion, dispatch }) {\r\n  let currentquestion = questions.find(\r\n    (question, index) => index === activeQuestion\r\n  );\r\n  return (\r\n    <>\r\n      <h4>{currentquestion.question}</h4>\r\n      <div className=\"options\">\r\n        {currentquestion.options.map((option) => {\r\n          return <Option optionText={option} key={option} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,SAASA,CAAC;EAAEC,SAAS;EAAEC,cAAc;EAAEC;AAAS,CAAC,EAAE;EACzE,IAAIC,eAAe,GAAGH,SAAS,CAACI,IAAI,CAClC,CAACC,QAAQ,EAAEC,KAAK,KAAKA,KAAK,KAAKL,cACjC,CAAC;EACD,oBACEL,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKJ,eAAe,CAACE;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnCf,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAL,QAAA,EACrBJ,eAAe,CAACU,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;QACvC,oBAAOnB,OAAA,CAACF,MAAM;UAACsB,UAAU,EAAED;QAAO,GAAMA,MAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACpD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACM,EAAA,GAduBlB,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}