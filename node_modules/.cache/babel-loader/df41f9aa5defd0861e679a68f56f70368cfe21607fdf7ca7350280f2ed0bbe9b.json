{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\winheml\\\\Desktop\\\\MyApp\\\\react-apps\\\\src\\\\Components\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Progress from \"./Progress\";\nimport Questions from \"./Questions\";\nimport NextButton from \"./nextButton\";\nimport FinishScreen from \"./FinishScreen\";\nimport Timer from \"./Timer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  status: \"loading\",\n  activeQuestion: null,\n  answered: null,\n  sumPoints: 0\n};\nconst URL = \"http://localhost:7000/questions\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"start\",\n        activeQuestion: 0\n      };\n    case \"answered\":\n      let correctQuestion = state.questions[state.activeQuestion];\n      let isCorrect = correctQuestion.correctOption === action.payload - 1;\n      return {\n        ...state,\n        answered: action.payload,\n        sumPoints: isCorrect ? state.sumPoints + correctQuestion.points : state.sumPoints\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        activeQuestion: state.activeQuestion + 1,\n        answered: null\n      };\n    case \"goToFinishScreen\":\n      return {\n        ...state,\n        status: \"finished\"\n      };\n    default:\n      throw new Error(\"Action unknown\");\n  }\n};\nexport default function App() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const numQuestions = state.questions.length;\n  const maxPoints = state.questions.reduce((accumulator, question) => accumulator + question.points, 0);\n  useEffect(() => {\n    fetch(URL).then(res => res.json()).then(data => {\n      dispatch({\n        type: \"dataReceived\",\n        payload: data\n      });\n    }).catch(e => {\n      console.log(e.name);\n      dispatch({\n        type: \"dataFailed\"\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [state.status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 40\n      }, this), state.status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, this), state.status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        numquestions: numQuestions,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), state.status === \"start\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          numQuestions: numQuestions,\n          activeQuestion: state.activeQuestion,\n          maxPoints: maxPoints,\n          currentPoints: state.sumPoints,\n          answered: state.answered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Questions, {\n          questions: state.questions,\n          activeQuestion: state.activeQuestion,\n          dispatch: dispatch,\n          answer: state.answered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), state.status === \"finished\" && /*#__PURE__*/_jsxDEV(FinishScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: state.answered && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(NextButton, {\n            dispatch: dispatch,\n            activeQuestion: state.activeQuestion,\n            numQuestions: numQuestions,\n            status: state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","StartScreen","Progress","Questions","NextButton","FinishScreen","Timer","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","questions","status","activeQuestion","answered","sumPoints","URL","reducer","state","action","type","payload","correctQuestion","isCorrect","correctOption","points","App","_s","dispatch","numQuestions","length","maxPoints","reduce","accumulator","question","fetch","then","res","json","data","catch","e","console","log","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","numquestions","currentPoints","answer","_c","$RefreshReg$"],"sources":["C:/Users/winheml/Desktop/MyApp/react-apps/src/Components/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Loader from \"./Loader\";\r\nimport Error from \"./Error\";\r\nimport StartScreen from \"./StartScreen\";\r\nimport Progress from \"./Progress\";\r\nimport Questions from \"./Questions\";\r\nimport NextButton from \"./nextButton\";\r\nimport FinishScreen from \"./FinishScreen\";\r\nimport Timer from \"./Timer\";\r\nconst initialState = {\r\n  questions: [],\r\n  status: \"loading\",\r\n  activeQuestion: null,\r\n  answered: null,\r\n  sumPoints: 0,\r\n};\r\n\r\nconst URL = \"http://localhost:7000/questions\"\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"dataReceived\":\r\n      return { ...state, questions: action.payload, status: \"ready\" };\r\n    case \"dataFailed\":\r\n      return { ...state, status: \"error\" };\r\n    case \"start\":\r\n      return { ...state, status: \"start\", activeQuestion: 0 };\r\n    case \"answered\":\r\n      let correctQuestion = state.questions[state.activeQuestion];\r\n      let isCorrect = correctQuestion.correctOption === action.payload - 1;\r\n      return {\r\n        ...state,\r\n        answered: action.payload,\r\n        sumPoints: isCorrect\r\n          ? state.sumPoints + correctQuestion.points\r\n          : state.sumPoints,\r\n      };\r\n    case \"nextQuestion\":\r\n      return {\r\n        ...state,\r\n        activeQuestion: state.activeQuestion + 1,\r\n        answered: null,\r\n      };\r\n    case \"goToFinishScreen\":\r\n      return {\r\n        ...state,\r\n        status: \"finished\",\r\n      };\r\n    default:\r\n      throw new Error(\"Action unknown\");\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const numQuestions = state.questions.length;\r\n  const maxPoints = state.questions.reduce(\r\n    (accumulator, question) => accumulator + question.points,\r\n    0\r\n  );\r\n  useEffect(() => {\r\n    fetch(URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({ type: \"dataReceived\", payload: data });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.name);\r\n        dispatch({ type: \"dataFailed\" });\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n\r\n      <Main>\r\n        {state.status === \"loading\" && <Loader />}\r\n        {state.status === \"error\" && <Error />}\r\n        {state.status === \"ready\" && (\r\n          <StartScreen numquestions={numQuestions} dispatch={dispatch} />\r\n        )}\r\n        {state.status === \"start\" && (\r\n          <>\r\n            <Progress\r\n              numQuestions={numQuestions}\r\n              activeQuestion={state.activeQuestion}\r\n              maxPoints={maxPoints}\r\n              currentPoints={state.sumPoints}\r\n              answered={state.answered}\r\n            />\r\n            <Questions\r\n              questions={state.questions}\r\n              activeQuestion={state.activeQuestion}\r\n              dispatch={dispatch}\r\n              answer={state.answered}\r\n            />\r\n          </>\r\n        )}\r\n        {state.status === \"finished\" && <FinishScreen />}\r\n        <footer>\r\n          {state.answered && (\r\n            <>\r\n            <NextButton\r\n              dispatch={dispatch}\r\n              activeQuestion={state.activeQuestion}\r\n              numQuestions={numQuestions}\r\n              status={state.status}\r\n            />\r\n            <Timer />\r\n            </>\r\n          )}\r\n        </footer>\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}